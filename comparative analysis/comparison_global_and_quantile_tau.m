%% Comparison of global Kendall’s τ and quantile Kendall’s τ for Gumbel, Clayton, Frank and FGM copula models
%% basic setup
measuretype = "kendall"; 
quantile_tau_type = "ll";    % "uu": upper-upper quantile Kendall’s τ; "ll": lower-lower quantile Kendall’s τ
copula_type = 'Gumbel';      % "gumbel", "clayton", "frank", "fgm"

%% copula parameter
% for Gumbel copula, theta = 1.1, 1.25, 1.5, 2, 5, 10
% for Clayton copula, theta = 0.1, 0.2, 0.5, 2, 3, 8
% for Frank copula, theta = 0.3, 1, 3, 8, 15, 20
% for FGM copula, theta = 0.05, 0.1, 0.2, 0.3, 0.5, 0.7
theta = 3;

%%
% u = csvread('fgm_u.csv',1,0); 
% v = csvread('fgm_v.csv',1,0); 
% UV = [u v]; 

%% generate data using copula model
% for FGM copula model, data is generated by the "rCopula" function of
% the "copula" package in R software. see fgm_simulation.R
UV = copularnd(copula_type,theta,300000);

Xtemp = UV(:,1); 
Ytemp = UV(:,2); 
  
%% empirical upper-upper quantile Kendall's tau
if strcmpi(quantile_tau_type, 'uu')  
    quantile_parameter = 0:0.01:0.99;
    empirical_localKendallTau = zeros(length(quantile_parameter),1);
    for i=1:1:length(quantile_parameter)
           temp = find((UV(:,1)>=quantile(UV(:,1),quantile_parameter(i))&(UV(:,2)>=quantile(UV(:,2),quantile_parameter(i))))); 
           X = Xtemp(temp);
           Y = Ytemp(temp); 
           if ~isempty(X) && ~isempty(Y)
              empirical_localKendallTau(i) = corr(X,Y,'type','Kendall');
              leftnumber = length(quantile_parameter) - i;
              disp("Calculating empirical quantile Kendall's tau. Finished " + i + "; left " + leftnumber);
           end   
    end
end

%% empirical lower-lower quantile Kendall's tau
if strcmpi(quantile_tau_type, 'll') 
    quantile_parameter = 0.01:0.01:1;    
    empirical_localKendallTau = zeros(length(quantile_parameter),1);
    for i=1:1:length(quantile_parameter)
           temp = find((UV(:,1)<=quantile(UV(:,1),quantile_parameter(i))&(UV(:,2)<=quantile(UV(:,2),quantile_parameter(i))))); 
           X = Xtemp(temp);
           Y = Ytemp(temp); 
           if ~isempty(X) && ~isempty(Y)
              empirical_localKendallTau(i) = corr(X,Y,'type','Kendall');
              leftnumber = length(quantile_parameter) - i;
              disp("Calculating empirical quantile Kendall's tau. Finished " + i + "; left " + leftnumber);
           end   
    end
end

figure('Position', [100, 500, 200, 200]);
plot(quantile_parameter,empirical_localKendallTau,'-.','MarkerSize',4,'LineWidth',2,'Color',[0.02,0.44,0.71]); hold on;  % [0.04,0.35,0.72]

xticks(0:0.2:1);
yticks(0:0.25:1);
ylim([0 1]);

% xticks(0:0.2:1);
% yticks(0:0.1:0.4);
% ylim([0 0.4]);

xlabel('', 'FontSize', 11);
ylabel('', 'FontSize', 11);
title('', 'FontSize', 12);

ax = gca;
set(ax.XAxis, 'FontSize', 10);
set(ax.YAxis, 'FontSize', 10);
set(gcf, 'Color', [1 1 1]);  

%% copula model-based quantile Kendall's tau along the main diagonal
copulatype = copula_type;
weight1 = 0;                      % the weight of the first copula function in the mixture copula model
weight2 = 0;                      % the weight of the second copula function in the mixture copula model
copulaparameter1 = theta;         % for mixture copula model, parameter of the first copula function; for sjc copula, the upper tail dependence coefficient   
copulaparameter2 = 0;             % for mixture copula model, parameter of the second copula function; for sjc copula, the lower tail dependence coefficient 
copulaparameter3 = 0;             % for mixture copula model, parameter of the third copula function
 
if strcmpi(quantile_tau_type, 'uu')
   quantile_parameter = 0:0.01:0.99;
   ld_number = length(quantile_parameter);
   mainlocalKendallTau_copula = zeros(ld_number,1);
   for i=1:1:ld_number
   mainlocalKendallTau_copula(i) = fun_copulald_general(copulatype,weight1,weight2,copulaparameter1,copulaparameter2,copulaparameter3,measuretype,quantile_parameter(i),1,quantile_parameter(i),1);
   % mainlocalKendallTau_copula(i) = fun_copulald_type_II(copulatype,weight1,weight2,copulaparameter1,copulaparameter2,copulaparameter3,'kendall',quantile_tau_type,quantile_parameter(i),quantile_parameter(i));
   end
end

if strcmpi(quantile_tau_type, 'll')
   quantile_parameter = 0.01:0.01:1;  
   ld_number = length(quantile_parameter);
   mainlocalKendallTau_copula = zeros(ld_number,1);
   for i=1:1:length(quantile_parameter)
   mainlocalKendallTau_copula(i) = fun_copulald_general(copulatype,weight1,weight2,copulaparameter1,copulaparameter2,copulaparameter3,measuretype,0,quantile_parameter(i),0,quantile_parameter(i));
   % mainlocalKendallTau_copula(i) = fun_copulald_type_II(copulatype,weight1,weight2,copulaparameter1,copulaparameter2,copulaparameter3,'kendall',quantile_tau_type,quantile_parameter(i),quantile_parameter(i));
   end
end

plot(quantile_parameter,mainlocalKendallTau_copula,'--','MarkerSize',8,'LineWidth',2.5,'Color',[0.85,0.33,0.10]);hold on;   % [0.82,0.07,0.07]

%% theoretical global Kendall's tau
switch lower(copula_type)
case "gumbel"    % gumbel copula
    copula_globalKendalltau = 1 - 1/theta;    
case "clayton"   % clayton copula
    copula_globalKendalltau = theta/(theta+2);   
case "frank"     % frank copula
    copula_globalKendalltau = fun_copulald_general('frank',0,0,theta,0,0,measuretype,0,1,0,1);   
case "fgm"       % FGM copula
    copula_globalKendalltau = 2/9*theta; 
end

x=[0 1];
y=[copula_globalKendalltau copula_globalKendalltau];
plot(x,y,'-','MarkerSize',11,'LineWidth',1,'Color',[0.85,0.33,0.10]);  % [0.78,0.10,0.10]
legend('empirical','copula model','global Kendall''s \tau','fontsize',9,'Location','northwest','EdgeColor',[1 1 1])
xlabel('\tau^{' + upper(quantile_tau_type) + '}_{XY,q} ;  Gumbel(u,v,' + theta + ')','fontsize',9)

